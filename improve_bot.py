#!/usr/bin/env python3
"""
Improve Rasa Bot with more Bulgarian examples and proper model
"""

import os
import yaml
import shutil
from datetime import datetime

def backup_files():
    """Create backup of current files"""
    timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
    backup_dir = f"backup_{timestamp}"
    os.makedirs(backup_dir, exist_ok=True)
    
    files_to_backup = [
        "rasa/data/nlu.yml",
        "rasa/domain.yml", 
        "rasa/data/stories.yml"
    ]
    
    for file_path in files_to_backup:
        if os.path.exists(file_path):
            shutil.copy2(file_path, backup_dir)
    
    print(f"‚úÖ Backup created in: {backup_dir}")
    return backup_dir

def load_yaml(file_path):
    """Load YAML file"""
    if os.path.exists(file_path):
        with open(file_path, 'r', encoding='utf-8') as f:
            return yaml.safe_load(f)
    return None

def save_yaml(data, file_path):
    """Save data to YAML file"""
    with open(file_path, 'w', encoding='utf-8') as f:
        yaml.dump(data, f, default_flow_style=False, allow_unicode=True, sort_keys=False)

def improve_nlu_data():
    """Improve NLU data with more Bulgarian examples"""
    
    # Load current NLU data
    nlu_file = "rasa/data/nlu.yml"
    nlu_data = load_yaml(nlu_file)
    
    if not nlu_data:
        print("‚ùå Could not load NLU data")
        return False
    
    # Find and improve existing intents
    for intent in nlu_data['nlu']:
        if intent['intent'] == 'greet':
            # Add more Bulgarian greetings
            current_examples = intent['examples'].split('\n')
            new_examples = [
                "    - –∑–¥—Ä–∞—Å—Ç–∏",
                "    - –∑–¥—Ä–∞–≤–µ–π",
                "    - –ø—Ä–∏–≤–µ—Ç",
                "    - –¥–æ–±—ä—Ä –¥–µ–Ω",
                "    - –¥–æ–±—Ä–æ —É—Ç—Ä–æ",
                "    - –¥–æ–±—ä—Ä –≤–µ—á–µ—Ä",
                "    - –∑–¥—Ä–∞–≤–µ",
                "    - –∑–¥—Ä–∞–≤–µ–∏",
                "    - –∑–¥—Ä–∞—Å—Ç–∏–∫–∏",
                "    - –∑–¥—Ä–∞–≤–µ–π—Ç–µ",
                "    - –ø—Ä–∏–≤–µ—Ç–∏",
                "    - —á–∞–æ",
                "    - —Ö–µ–π",
                "    - —Ö–µ–ª–æ",
                "    - —Ö–∞–π",
                "    - –∞–ª–æ",
                "    - –∞–ª–æ–æ",
                "    - –∞–ª–æ—É"
            ]
            intent['examples'] = intent['examples'].rstrip() + '\n' + '\n'.join(new_examples)
            print("‚úÖ Enhanced greet intent with Bulgarian examples")
            
        elif intent['intent'] == 'goodbye':
            # Add more Bulgarian goodbyes
            current_examples = intent['examples'].split('\n')
            new_examples = [
                "    - –¥–æ–≤–∏–∂–¥–∞–Ω–µ",
                "    - —á–∞–æ",
                "    - –¥–æ–≤–∏–∂–¥–∞–Ω–µ",
                "    - –ø—Ä–∏—è—Ç–µ–Ω –¥–µ–Ω",
                "    - –ª–µ–∫–∞ –≤–µ—á–µ—Ä",
                "    - –ª–µ–∫–∞ –Ω–æ—â",
                "    - –¥–æ —Å–∫–æ—Ä–æ",
                "    - –¥–æ —Å–ª–µ–¥–≤–∞—â–æ",
                "    - –¥–æ —É—Ç—Ä–µ",
                "    - –¥–æ –≤–∏–¥–µ–Ω–µ",
                "    - –ø—Ä–∏—è—Ç–Ω–æ",
                "    - —É—Å–ø–µ—Ö",
                "    - –º–µ—Ä—Å–∏",
                "    - –±–ª–∞–≥–æ–¥–∞—Ä—è",
                "    - –º–µ—Ä—Å–∏ –º–Ω–æ–≥–æ"
            ]
            intent['examples'] = intent['examples'].rstrip() + '\n' + '\n'.join(new_examples)
            print("‚úÖ Enhanced goodbye intent with Bulgarian examples")
            
        elif intent['intent'] == 'weather':
            # Add more Bulgarian weather examples
            current_examples = intent['examples'].split('\n')
            new_examples = [
                "    - –∫–∞–∫–≤–æ –µ –≤—Ä–µ–º–µ—Ç–æ",
                "    - –≤—Ä–µ–º–µ—Ç–æ –∫–∞–∫–≤–æ –µ",
                "    - —â–µ –≤–∞–ª–∏ –ª–∏",
                "    - —â–µ –µ —Å–ª—ä–Ω—á–µ–≤–æ –ª–∏",
                "    - —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞—Ç–∞ –∫–∞–∫–≤–∞ –µ",
                "    - –≥—Ä–∞–¥—É—Å–∏—Ç–µ –∫–æ–ª–∫–æ —Å–∞",
                "    - –≤—Ä–µ–º–µ—Ç–æ –¥–Ω–µ—Å",
                "    - –≤—Ä–µ–º–µ—Ç–æ —É—Ç—Ä–µ",
                "    - –∫–ª–∏–º–∞—Ç–∏—á–Ω–∏ —É—Å–ª–æ–≤–∏—è",
                "    - –º–µ—Ç–µ–æ",
                "    - –ø—Ä–æ–≥–Ω–æ–∑–∞ –∑–∞ –≤—Ä–µ–º–µ—Ç–æ",
                "    - –≤—Ä–µ–º–µ—Ç–æ –≤ –°–æ—Ñ–∏—è",
                "    - –≤—Ä–µ–º–µ—Ç–æ –≤ –ë—ä–ª–≥–∞—Ä–∏—è",
                "    - —â–µ –µ —Å—Ç—É–¥–µ–Ω–æ –ª–∏",
                "    - —â–µ –µ —Ç–æ–ø–ª–æ –ª–∏"
            ]
            intent['examples'] = intent['examples'].rstrip() + '\n' + '\n'.join(new_examples)
            print("‚úÖ Enhanced weather intent with Bulgarian examples")
            
        elif intent['intent'] == 'joke':
            # Add more Bulgarian joke examples
            current_examples = intent['examples'].split('\n')
            new_examples = [
                "    - —Ä–∞–∑–∫–∞–∂–∏ –º–∏ –≤–∏—Ü",
                "    - –∫–∞–∂–∏ –≤–∏—Ü",
                "    - —Ä–∞–∑–∫–∞–∂–∏ –≤–∏—Ü",
                "    - –∫–∞–∂–∏ –Ω–µ—â–æ –∑–∞–±–∞–≤–Ω–æ",
                "    - —Ä–∞–∑—Å–º–µ—à–∏ –º–µ",
                "    - –∑–∞–±–∞–≤–ª—è–≤–∞–π –º–µ",
                "    - –∫–∞–∂–∏ –Ω–µ—â–æ —Å–º–µ—à–Ω–æ",
                "    - —Ä–∞–∑–∫–∞–∂–∏ –Ω–µ—â–æ –∑–∞–±–∞–≤–Ω–æ",
                "    - –≤–∏—Ü",
                "    - –≤–∏—Ü—á–µ",
                "    - —à–µ–≥–∞",
                "    - —à–µ–≥–∏—á–∫–∞",
                "    - –∑–∞–±–∞–≤–Ω–∞ –∏—Å—Ç–æ—Ä–∏—è",
                "    - —Å–º–µ—à–Ω–∞ –∏—Å—Ç–æ—Ä–∏—è",
                "    - –∞–Ω–µ–∫–¥–æ—Ç"
            ]
            intent['examples'] = intent['examples'].rstrip() + '\n' + '\n'.join(new_examples)
            print("‚úÖ Enhanced joke intent with Bulgarian examples")
            
        elif intent['intent'] == 'help':
            # Add more Bulgarian help examples
            current_examples = intent['examples'].split('\n')
            new_examples = [
                "    - –ø–æ–º–æ—â",
                "    - –Ω—É–∂–Ω–∞ –º–∏ –µ –ø–æ–º–æ—â",
                "    - –º–æ–∂–µ—à –ª–∏ –¥–∞ –º–∏ –ø–æ–º–æ–≥–Ω–µ—à",
                "    - –∫–∞–∫–≤–æ –º–æ–∂–µ—à –¥–∞ –ø—Ä–∞–≤–∏—à",
                "    - –∫–∞–∫–≤–æ —É–º–µ–µ—à",
                "    - –∫–∞–∫–≤–æ –∑–Ω–∞–µ—à",
                "    - –∫–∞–∫–≤–æ –º–æ–∂–µ—à",
                "    - –∫–∞–∫–≤–æ —Å–∏ —Å–ø–æ—Å–æ–±–µ–Ω",
                "    - –∫–∞–∫–≤–∏ —Å–∞ –≤—ä–∑–º–æ–∂–Ω–æ—Å—Ç–∏—Ç–µ —Ç–∏",
                "    - –∫–∞–∫–≤–∏ —Å–∞ —Ñ—É–Ω–∫—Ü–∏–∏—Ç–µ —Ç–∏",
                "    - –∫–∞–∫–≤–æ –ø—Ä–∞–≤–∏—à",
                "    - –∫–∞–∫–≤–æ —Å–∏",
                "    - –∫–∞–∫–≤–æ —Å–∏ —Ç–∏",
                "    - –∫–∞–∫–≤–æ —Å–∏ –∑–∞ –±–æ—Ç",
                "    - –∫–∞–∫–≤–æ —Å–∏ –∑–∞ –∞—Å–∏—Å—Ç–µ–Ω—Ç"
            ]
            intent['examples'] = intent['examples'].rstrip() + '\n' + '\n'.join(new_examples)
            print("‚úÖ Enhanced help intent with Bulgarian examples")
            
        elif intent['intent'] == 'thanks':
            # Add more Bulgarian thanks examples
            current_examples = intent['examples'].split('\n')
            new_examples = [
                "    - –±–ª–∞–≥–æ–¥–∞—Ä—è",
                "    - –º–µ—Ä—Å–∏",
                "    - –±–ª–∞–≥–æ–¥–∞—Ä—è —Ç–∏",
                "    - –º–Ω–æ–≥–æ –±–ª–∞–≥–æ–¥–∞—Ä—è",
                "    - –º–µ—Ä—Å–∏ –º–Ω–æ–≥–æ",
                "    - –±–ª–∞–≥–æ–¥–∞—Ä—è –º–Ω–æ–≥–æ",
                "    - –±–ª–∞–≥–æ–¥–∞—Ä—è —Ç–∏ –º–Ω–æ–≥–æ",
                "    - –º–µ—Ä—Å–∏ —Ç–∏",
                "    - –±–ª–∞–≥–æ–¥–∞—Ä—è —Ç–∏ –º–Ω–æ–≥–æ",
                "    - –º–Ω–æ–≥–æ –º–µ—Ä—Å–∏",
                "    - –±–ª–∞–≥–æ–¥–∞—Ä—è —Ç–∏ –º–Ω–æ–≥–æ",
                "    - –º–µ—Ä—Å–∏ —Ç–∏ –º–Ω–æ–≥–æ",
                "    - –±–ª–∞–≥–æ–¥–∞—Ä—è —Ç–∏ –º–Ω–æ–≥–æ",
                "    - –º–µ—Ä—Å–∏ —Ç–∏ –º–Ω–æ–≥–æ",
                "    - –±–ª–∞–≥–æ–¥–∞—Ä—è —Ç–∏ –º–Ω–æ–≥–æ"
            ]
            intent['examples'] = intent['examples'].rstrip() + '\n' + '\n'.join(new_examples)
            print("‚úÖ Enhanced thanks intent with Bulgarian examples")
    
    # Save updated NLU data
    save_yaml(nlu_data, nlu_file)
    print("‚úÖ Updated NLU data with more Bulgarian examples")
    
    return True

def improve_domain():
    """Improve domain with better responses and bot name"""
    
    # Load current domain
    domain_file = "rasa/domain.yml"
    domain_data = load_yaml(domain_file)
    
    if not domain_data:
        print("‚ùå Could not load domain data")
        return False
    
    # Improve existing responses
    domain_data['responses']['utter_greet'] = [
        {'text': "–ó–¥—Ä–∞–≤–µ–π! –ê–∑ —Å—ä–º SofiaBot, —Ç–≤–æ—è—Ç –±—ä–ª–≥–∞—Ä—Å–∫–∏ AI –∞—Å–∏—Å—Ç–µ–Ω—Ç! ü§ñ –ö–∞–∫ –º–æ–≥–∞ –¥–∞ —Ç–∏ –ø–æ–º–æ–≥–Ω–∞?"},
        {'text': "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∑–≤–∞–º —Å–µ SofiaBot –∏ —Å—ä–º —Ç—É–∫ –¥–∞ —Ç–∏ –ø–æ–º–æ–≥–Ω–∞! üòä –ö–∞–∫–≤–æ –∏—Å–∫–∞—à –¥–∞ –∑–Ω–∞–µ—à?"},
        {'text': "–ó–¥—Ä–∞—Å—Ç–∏! –ê–∑ —Å—ä–º SofiaBot - —Ç–≤–æ—è—Ç –ø—Ä–∏—è—Ç–µ–ª—Å–∫–∏ –±—ä–ª–≥–∞—Ä—Å–∫–∏ –±–æ—Ç! üéâ –ö–∞–∫ —Å–∏?"},
        {'text': "–î–æ–±—ä—Ä –¥–µ–Ω! SofiaBot –Ω–∞ –≤–∞—à–µ —Ä–∞–∑–ø–æ–ª–æ–∂–µ–Ω–∏–µ! ü§ñ –ö–∞–∫ –º–æ–≥–∞ –¥–∞ –≤–∏ –ø–æ–º–æ–≥–Ω–∞?"},
        {'text': "–ó–¥—Ä–∞–≤–µ–π—Ç–µ! –ê–∑ —Å—ä–º SofiaBot, –≤–∞—à–∏—è—Ç AI –∞—Å–∏—Å—Ç–µ–Ω—Ç! üòä –ö–∞–∫–≤–æ –∏—Å–∫–∞—Ç–µ –¥–∞ –∑–Ω–∞–µ—Ç–µ?"}
    ]
    
    domain_data['responses']['utter_goodbye'] = [
        {'text': "–î–æ–≤–∏–∂–¥–∞–Ω–µ! –†–∞–¥–≤–∞–º —Å–µ, —á–µ —É—Å–ø—è—Ö –¥–∞ –ø–æ–º–æ–≥–Ω–∞! üòä"},
        {'text': "–ß–∞–æ! –ù–∞–¥—è–≤–∞–º —Å–µ –¥–∞ —Å–º–µ —Å–µ –≤–∏–∂–¥–∞–ª–∏ –æ—Ç–Ω–æ–≤–æ —Å–∫–æ—Ä–æ! üëã"},
        {'text': "–î–æ–≤–∏–∂–¥–∞–Ω–µ! SofiaBot –≤–∏–Ω–∞–≥–∏ –µ —Ç—É–∫ –∑–∞ –≤–∞—Å! ü§ñ"},
        {'text': "–ü—Ä–∏—è—Ç–µ–Ω –¥–µ–Ω! SofiaBot —Å–µ –ø—Ä–æ—â–∞–≤–∞! üòÑ"},
        {'text': "–î–æ —Å–∫–æ—Ä–æ! SofiaBot –≤–∏–Ω–∞–≥–∏ –µ –≥–æ—Ç–æ–≤ –¥–∞ –ø–æ–º–æ–≥–Ω–µ! üéâ"}
    ]
    
    domain_data['responses']['utter_name'] = [
        {'text': "–ê–∑ —Å—ä–º SofiaBot! ü§ñ –¢–≤–æ—è—Ç –±—ä–ª–≥–∞—Ä—Å–∫–∏ AI –∞—Å–∏—Å—Ç–µ–Ω—Ç, –∫–æ–π—Ç–æ –≤–∏–Ω–∞–≥–∏ –µ –≥–æ—Ç–æ–≤ –¥–∞ –ø–æ–º–æ–≥–Ω–µ!"},
        {'text': "–ö–∞–∑–≤–∞–º —Å–µ SofiaBot! üòä –ê–∑ —Å—ä–º —Ç—É–∫ –¥–∞ —Ç–∏ –ø–æ–º–æ–≥–Ω–∞ —Å –≤—Å–∏—á–∫–æ, –∫–æ–µ—Ç–æ –∏—Å–∫–∞—à!"},
        {'text': "SofiaBot –µ –∏–º–µ—Ç–æ –º–∏! üéâ –¢–≤–æ—è—Ç –ø—Ä–∏—è—Ç–µ–ª—Å–∫–∏ –±—ä–ª–≥–∞—Ä—Å–∫–∏ –±–æ—Ç!"},
        {'text': "SofiaBot —Å—ä–º! ü§ñ –í–∞—à–∏—è—Ç AI –∞—Å–∏—Å—Ç–µ–Ω—Ç, –∫–æ–π—Ç–æ –≥–æ–≤–æ—Ä–∏ –±—ä–ª–≥–∞—Ä—Å–∫–∏!"},
        {'text': "SofiaBot! üòä –¢–≤–æ—è—Ç –±—ä–ª–≥–∞—Ä—Å–∫–∏ –ø–æ–º–æ—â–Ω–∏–∫ –≤ –¥–∏–≥–∏—Ç–∞–ª–Ω–∏—è —Å–≤—è—Ç!"}
    ]
    
    domain_data['responses']['utter_capabilities'] = [
        {'text': "SofiaBot –º–æ–∂–µ –¥–∞:\n- –†–∞–∑–≥–æ–≤–∞—Ä—è –Ω–∞ –±—ä–ª–≥–∞—Ä—Å–∫–∏ –∏ –∞–Ω–≥–ª–∏–π—Å–∫–∏\n- –†–∞–∑–∫–∞–∑–≤–∞ –≤–∏—Ü–æ–≤–µ –∏ –∑–∞–±–∞–≤–Ω–∏ –∏—Å—Ç–æ—Ä–∏–∏\n- –û—Ç–≥–æ–≤–∞—Ä—è –Ω–∞ –≤—ä–ø—Ä–æ—Å–∏ –∑–∞ –≤—Ä–µ–º–µ—Ç–æ\n- –ü–æ–º–æ–≥–∞ —Å —Ä–∞–∑–ª–∏—á–Ω–∏ –∑–∞–¥–∞—á–∏\n- –¢–µ —Ä–∞–∑–≤–µ—Å–µ–ª–∏ –∫–æ–≥–∞—Ç–æ —Å–∏ —Ç—ä–∂–µ–Ω\n- –ò –æ—â–µ –º–Ω–æ–≥–æ! ü§ñ\n\n–ö–∞–∫–≤–æ –∏—Å–∫–∞—à –¥–∞ –∑–Ω–∞–µ—à?"},
        {'text': "–ö–∞—Ç–æ SofiaBot –º–æ–≥–∞ –¥–∞:\n- –ì–æ–≤–æ—Ä—è –Ω–∞ –±—ä–ª–≥–∞—Ä—Å–∫–∏ –ø–µ—Ä—Ñ–µ–∫—Ç–Ω–æ\n- –†–∞–∑–∫–∞–∑–≤–∞–º –≤–∏—Ü–æ–≤–µ –∏ —à–µ–≥–∏\n- –û—Ç–≥–æ–≤–∞—Ä—è–º –Ω–∞ –≤—ä–ø—Ä–æ—Å–∏\n- –¢–µ —Ä–∞–∑–≤–µ—Å–µ–ª—è\n- –ü–æ–º–æ–≥–∞–º —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è\n- –ë—ä–¥–∞ —Ç–≤–æ—è—Ç –ø—Ä–∏—è—Ç–µ–ª—Å–∫–∏ –∞—Å–∏—Å—Ç–µ–Ω—Ç! üòä\n\n–ö–∞–∫–≤–æ —Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É–≤–∞?"},
        {'text': "SofiaBot –µ —Ç–≤–æ—è—Ç –±—ä–ª–≥–∞—Ä—Å–∫–∏ AI –∞—Å–∏—Å—Ç–µ–Ω—Ç, –∫–æ–π—Ç–æ –º–æ–∂–µ –¥–∞:\n- –†–∞–∑–≥–æ–≤–∞—Ä—è –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–æ –Ω–∞ –±—ä–ª–≥–∞—Ä—Å–∫–∏\n- –†–∞–∑–∫–∞–∑–≤–∞ –∑–∞–±–∞–≤–Ω–∏ –∏—Å—Ç–æ—Ä–∏–∏\n- –û—Ç–≥–æ–≤–∞—Ä—è –Ω–∞ –≤—ä–ø—Ä–æ—Å–∏\n- –ü–æ–º–æ–≥–∞ —Å —Ä–∞–∑–ª–∏—á–Ω–∏ –∑–∞–¥–∞—á–∏\n- –¢–µ —Ä–∞–∑–≤–µ—Å–µ–ª–∏\n- –ë—ä–¥–µ —Ç–≤–æ—è—Ç –¥–∏–≥–∏—Ç–∞–ª–µ–Ω –ø—Ä–∏—è—Ç–µ–ª! üéâ\n\n–ö–∞–∫–≤–æ –∏—Å–∫–∞—à –¥–∞ –∑–Ω–∞–µ—à?"}
    ]
    
    domain_data['responses']['utter_joke'] = [
        {'text': "–ï—Ç–æ –µ–¥–∏–Ω –±—ä–ª–≥–∞—Ä—Å–∫–∏ –≤–∏—Ü:\n\n–ó–∞—â–æ –±—ä–ª–≥–∞—Ä–∏–Ω—ä—Ç –Ω–æ—Å–∏ –¥–≤–µ —á–∞—Å–æ–≤–Ω–∏–∫–∞?\n–ó–∞—â–æ—Ç–æ –µ–¥–∏–Ω–∏—è—Ç –ø–æ–∫–∞–∑–≤–∞ –≤—Ä–µ–º–µ—Ç–æ, –∞ –¥—Ä—É–≥–∏—è—Ç - –∫–æ–ª–∫–æ –≤—Ä–µ–º–µ –º—É –æ—Å—Ç–∞–≤–∞! üòÑ"},
        {'text': "–ó–∞—â–æ —É—á–µ–Ω–∏—Ç–µ –Ω–µ —Å–µ –¥–æ–≤–µ—Ä—è–≤–∞—Ç –Ω–∞ –∞—Ç–æ–º–∏—Ç–µ?\n–ó–∞—â–æ—Ç–æ —Ç–µ —Å—ä—Å—Ç–∞–≤—è—Ç –≤—Å–∏—á–∫–æ! üòÑ\n\n–ê –µ—Ç–æ –∏ –µ–¥–∏–Ω –±—ä–ª–≥–∞—Ä—Å–∫–∏:\n–ö–∞–∫ –Ω–∞—Ä–∏—á–∞—à –º–µ—á–∫–∞ –±–µ–∑ –∑—ä–±–∏?\n–ñ–µ–ª–∞—Ç–∏–Ω–µ–Ω–∞ –º–µ—á–∫–∞! üêª"},
        {'text': "–ï—Ç–æ –µ–¥–∏–Ω –∑–∞–±–∞–≤–µ–Ω –≤–∏—Ü:\n\n–ó–∞—â–æ –ø—Ä–æ–≥—Ä–∞–º–∏—Å—Ç—ä—Ç –æ—Ç–∏–¥–µ –≤ –º–∞–≥–∞–∑–∏–Ω–∞?\n–ó–∞—â–æ—Ç–æ –º—É —Ç—Ä—è–±–≤–∞—à–µ —Ö–ª—è–±... –∏ –º–ª—è–∫–æ... –∏ —è–π—Ü–∞... –∏ –º–∞—Å–ª–æ... –∏ —Å–∏—Ä–µ–Ω–µ... üòÇ\n\nSofiaBot –≤–∏–Ω–∞–≥–∏ –µ –≥–æ—Ç–æ–≤ –¥–∞ —Ç–µ —Ä–∞–∑—Å–º–µ–µ! üéâ"}
    ]
    
    domain_data['responses']['utter_weather'] = [
        {'text': "–°—ä–∂–∞–ª—è–≤–∞–º, SofiaBot –Ω–µ –º–æ–∂–µ –¥–∞ –ø—Ä–æ–≤–µ—Ä—è –≤—Ä–µ–º–µ—Ç–æ –≤ —Ä–µ–∞–ª–Ω–æ –≤—Ä–µ–º–µ, –Ω–æ –º–æ–≥–∞ –¥–∞ —Ç–∏ —Ä–∞–∑–∫–∞–∂–∞ –≤–∏—Ü –∑–∞ –¥–∞ —Ç–µ —Ä–∞–∑–≤–µ—Å–µ–ª—è! üòÑ"},
        {'text': "SofiaBot –≤—Å–µ –æ—â–µ –Ω–µ –º–æ–∂–µ –¥–∞ –ø—Ä–æ–≤–µ—Ä—è –≤—Ä–µ–º–µ—Ç–æ, –Ω–æ –º–æ–≥–∞ –¥–∞ —Ç–∏ —Ä–∞–∑–∫–∞–∂–∞ –∑–∞–±–∞–≤–Ω–∞ –∏—Å—Ç–æ—Ä–∏—è –≤–º–µ—Å—Ç–æ —Ç–æ–≤–∞! üéâ"},
        {'text': "–ó–∞ –≤—Ä–µ–º–µ—Ç–æ –Ω–∞–π-–¥–æ–±—Ä–µ –ø—Ä–æ–≤–µ—Ä–∏ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç, –Ω–æ SofiaBot –º–æ–∂–µ –¥–∞ —Ç–µ —Ä–∞–∑–≤–µ—Å–µ–ª–∏ —Å –≤–∏—Ü! üòä"}
    ]
    
    domain_data['responses']['utter_help'] = [
        {'text': "SofiaBot –º–æ–∂–µ –¥–∞ —Ç–∏ –ø–æ–º–æ–≥–Ω–µ —Å:\n- –†–∞–∑–≥–æ–≤–æ—Ä–∏ –Ω–∞ –±—ä–ª–≥–∞—Ä—Å–∫–∏ –∏ –∞–Ω–≥–ª–∏–π—Å–∫–∏\n- –†–∞–∑–∫–∞–∑–≤–∞–Ω–µ –Ω–∞ –≤–∏—Ü–æ–≤–µ –∏ —à–µ–≥–∏\n- –û—Ç–≥–æ–≤–∞—Ä—è–Ω–µ –Ω–∞ –≤—ä–ø—Ä–æ—Å–∏\n- –†–∞–∑–≤–µ—Å–µ–ª—è–≤–∞–Ω–µ –∫–æ–≥–∞—Ç–æ —Å–∏ —Ç—ä–∂–µ–Ω\n- –ë—ä–¥–∞–Ω–µ —Ç–≤–æ—è—Ç –¥–∏–≥–∏—Ç–∞–ª–µ–Ω –ø—Ä–∏—è—Ç–µ–ª\n- –ò –æ—â–µ –º–Ω–æ–≥–æ! ü§ñ\n\n–ü—Ä–æ—Å—Ç–æ –º–∏ –∫–∞–∂–∏ –∫–∞–∫–≤–æ –∏—Å–∫–∞—à!"},
        {'text': "–ö–∞—Ç–æ SofiaBot –º–æ–≥–∞ –¥–∞:\n- –ì–æ–≤–æ—Ä—è –ø–µ—Ä—Ñ–µ–∫—Ç–Ω–æ –±—ä–ª–≥–∞—Ä—Å–∫–∏\n- –†–∞–∑–∫–∞–∑–≤–∞–º –∑–∞–±–∞–≤–Ω–∏ –∏—Å—Ç–æ—Ä–∏–∏\n- –û—Ç–≥–æ–≤–∞—Ä—è–º –Ω–∞ –≤—ä–ø—Ä–æ—Å–∏\n- –¢–µ —Ä–∞–∑–≤–µ—Å–µ–ª—è\n- –ë—ä–¥–∞ —Ç–≤–æ—è—Ç AI –ø—Ä–∏—è—Ç–µ–ª\n- –ü–æ–º–æ–≥–∞–º —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è\n\n–ö–∞–∫–≤–æ —Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É–≤–∞? üòä"}
    ]
    
    domain_data['responses']['utter_thanks'] = [
        {'text': "–ú–æ–ª—è! SofiaBot –≤–∏–Ω–∞–≥–∏ –µ –≥–æ—Ç–æ–≤ –¥–∞ –ø–æ–º–æ–≥–Ω–µ! üòä"},
        {'text': "–†–∞–¥–≤–∞–º —Å–µ, —á–µ —É—Å–ø—è—Ö –¥–∞ –ø–æ–º–æ–≥–Ω–∞! SofiaBot –µ —Ç—É–∫ –∑–∞ –≤–∞—Å! ü§ñ"},
        {'text': "–ú–æ–ª—è! –ó–∞ SofiaBot –µ —É–¥–æ–≤–æ–ª—Å—Ç–≤–∏–µ –¥–∞ –ø–æ–º–∞–≥–∞! üéâ"},
        {'text': "–ù—è–º–∞ –∑–∞—â–æ! SofiaBot –µ —Ç—É–∫ –¥–∞ —Å–ª—É–∂–∏! üòÑ"},
        {'text': "–ú–æ–ª—è! –†–∞–¥–≤–∞–º —Å–µ, —á–µ —É—Å–ø—è—Ö –¥–∞ –ø–æ–º–æ–≥–Ω–∞! SofiaBot –≤–∏–Ω–∞–≥–∏ –µ –≥–æ—Ç–æ–≤! ü§ñ"}
    ]
    
    # Save updated domain
    save_yaml(domain_data, domain_file)
    print("‚úÖ Updated domain with SofiaBot personality and better responses")
    
    return True

def update_start_script():
    """Update start script to use the latest model"""
    
    # Find the latest model
    models_dir = "rasa/models"
    if os.path.exists(models_dir):
        model_files = [f for f in os.listdir(models_dir) if f.endswith('.tar.gz')]
        if model_files:
            # Sort by modification time to get the latest
            model_files.sort(key=lambda x: os.path.getmtime(os.path.join(models_dir, x)), reverse=True)
            latest_model = model_files[0]
            print(f"‚úÖ Latest model found: {latest_model}")
            
            # Update start script
            start_script_content = f"""@echo off
echo =========================================
echo    Starting SofiaBot - Web Chat Interface
echo =========================================
echo.

echo Step 1: Adding Docker to PATH...
set PATH=%PATH%;C:\Program Files\Docker\Docker\resources\bin

echo.
echo Step 2: Starting SofiaBot server...
echo Starting SofiaBot server in background...
start "SofiaBot Server" cmd /k "docker run --rm -v "%cd%\rasa:/app" -p 5005:5005 rasa/rasa:3.6.21 run --enable-api --cors "*" --port 5005 --model models/{latest_model}"

echo.
echo Waiting for SofiaBot to start...
timeout /t 20 /nobreak >nul

echo.
echo Step 3: Opening SofiaBot chat interface...
start "" "web_chat\index.html"

echo.
echo =========================================
echo    SofiaBot Ready!
echo =========================================
echo.
echo ‚úÖ SofiaBot server is running on http://localhost:5005
echo ‚úÖ SofiaBot chat interface opened in your browser
echo ‚úÖ SofiaBot is ready to chat in Bulgarian!
echo.
echo SofiaBot features:
echo - –ì–æ–≤–æ—Ä–∏ –ø–µ—Ä—Ñ–µ–∫—Ç–Ω–æ –±—ä–ª–≥–∞—Ä—Å–∫–∏
echo - –†–∞–∑–∫–∞–∑–≤–∞ –≤–∏—Ü–æ–≤–µ –∏ —à–µ–≥–∏
echo - –ü–æ–º–æ–≥–∞ —Å –≤—ä–ø—Ä–æ—Å–∏
echo - –†–∞–∑–≤–µ—Å–µ–ª—è–≤–∞ –∫–æ–≥–∞—Ç–æ —Å–∏ —Ç—ä–∂–µ–Ω
echo.
echo Chat interface location:
echo   web_chat\index.html
echo.
echo Enjoy chatting with SofiaBot! üéâ
echo.
pause"""
            
            with open('start_sofia_bot.bat', 'w', encoding='utf-8') as f:
                f.write(start_script_content)
            
            print("‚úÖ Created start_sofia_bot.bat with latest model")
            return True
    
    print("‚ùå No models found")
    return False

def main():
    """Main function"""
    print("üöÄ SofiaBot Improvement Tool")
    print("=" * 40)
    
    # Create backup
    backup_dir = backup_files()
    
    # Improve NLU data
    if improve_nlu_data():
        print("‚úÖ Successfully improved NLU data")
    else:
        print("‚ùå Failed to improve NLU data")
        return
    
    # Improve domain
    if improve_domain():
        print("‚úÖ Successfully improved domain")
    else:
        print("‚ùå Failed to improve domain")
        return
    
    # Update start script
    if update_start_script():
        print("‚úÖ Successfully updated start script")
    else:
        print("‚ùå Failed to update start script")
        return
    
    print("\nüéâ SofiaBot Improvement Complete!")
    print("=" * 40)
    print("‚úÖ Enhanced with more Bulgarian examples")
    print("‚úÖ SofiaBot personality added")
    print("‚úÖ Better responses in Bulgarian")
    print("‚úÖ Latest model will be used")
    print(f"‚úÖ Backup created in: {backup_dir}")
    print("\nüéØ Next steps:")
    print("1. Train SofiaBot: docker run --rm -v \"%cd%\\rasa:/app\" rasa/rasa:3.6.21 train --force")
    print("2. Start SofiaBot: .\\start_sofia_bot.bat")
    print("3. Test: \"–ó–¥—Ä–∞—Å—Ç–∏\", \"–ö–∞–∫–≤–æ –º–æ–∂–µ—à –¥–∞ –ø—Ä–∞–≤–∏—à?\", \"–†–∞–∑–∫–∞–∂–∏ –º–∏ –≤–∏—Ü\"")

if __name__ == "__main__":
    main()
