#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Fix Nginx API Configuration
–ü–æ–ø—Ä–∞–≤—è–Ω–µ –Ω–∞ Nginx API –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è—Ç–∞
"""

import paramiko
import time

def fix_nginx_api():
    """–ü–æ–ø—Ä–∞–≤—è Nginx API –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è—Ç–∞"""
    print("üîß –ü–û–ü–†–ê–í–Ø–ù–ï –ù–ê NGINX API –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø–¢–ê")
    print("="*50)
    
    host = "37.60.225.86"
    username = input("–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—Å–∫–æ –∏–º–µ (root): ").strip() or "root"
    password = input("–ü–∞—Ä–æ–ª–∞: ").strip()
    
    try:
        # –°–≤—ä—Ä–∑–≤–∞–Ω–µ —Å VPS
        ssh = paramiko.SSHClient()
        ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
        ssh.connect(host, username=username, password=password)
        print("‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–≤—ä—Ä–∑–≤–∞–Ω–µ!")
        
        # –°–ø–∏—Ä–∞–Ω–µ –Ω–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏—Ç–µ
        print("\nüõë –°–ø–∏—Ä–∞–Ω–µ –Ω–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏—Ç–µ...")
        ssh.exec_command("cd /root/multi-bots && docker-compose down")
        time.sleep(5)
        
        # –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –Ω–æ–≤–∞ Nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å –ø—Ä–∞–≤–∏–ª–Ω–∏ API endpoints
        print("\nüîß –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –Ω–æ–≤–∞ Nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è...")
        
        nginx_config = """events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    upstream zlatna_kosa {
        server zlatna_kosa:5005;
    }
    
    upstream zlatna_vilitsa {
        server zlatna_vilitsa:5008;
    }
    
    upstream grand_sofia {
        server grand_sofia:5009;
    }
    
    upstream zdrave_medical {
        server zdrave_medical:5010;
    }
    
    upstream moto_expert {
        server moto_expert:5011;
    }
    
    upstream dragonforged_v2 {
        server dragonforged_v2:5005;
    }
    
    server {
        listen 80;
        server_name 37.60.225.86;
        
        # –°–∞–ª–æ–Ω –ó–ª–∞—Ç–Ω–∞ –∫–æ—Å–∞
        location /zlatna-kosa/ {
            proxy_pass http://zlatna_kosa/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        location /zlatna-kosa/webhooks/rest/webhook {
            proxy_pass http://zlatna_kosa/webhooks/rest/webhook;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_method POST;
        }
        
        # –†–µ—Å—Ç–æ—Ä–∞–Ω—Ç –ó–ª–∞—Ç–Ω–∞ –≤–∏–ª–∏—Ü–∞
        location /zlatna-vilitsa/ {
            proxy_pass http://zlatna_vilitsa/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        location /zlatna-vilitsa/webhooks/rest/webhook {
            proxy_pass http://zlatna_vilitsa/webhooks/rest/webhook;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_method POST;
        }
        
        # –•–æ—Ç–µ–ª –ì—Ä–∞–Ω–¥ –°–æ—Ñ–∏—è
        location /grand-sofia/ {
            proxy_pass http://grand_sofia/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        location /grand-sofia/webhooks/rest/webhook {
            proxy_pass http://grand_sofia/webhooks/rest/webhook;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_method POST;
        }
        
        # –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏ —Ü–µ–Ω—Ç—ä—Ä –ó–¥—Ä–∞–≤–µ+
        location /zdrave-medical/ {
            proxy_pass http://zdrave_medical/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        location /zdrave-medical/webhooks/rest/webhook {
            proxy_pass http://zdrave_medical/webhooks/rest/webhook;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_method POST;
        }
        
        # –ê–≤—Ç–æ—Å–µ—Ä–≤–∏–∑ –ú–æ—Ç–æ –ï–∫—Å–ø–µ—Ä—Ç
        location /moto-expert/ {
            proxy_pass http://moto_expert/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        location /moto-expert/webhooks/rest/webhook {
            proxy_pass http://moto_expert/webhooks/rest/webhook;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_method POST;
        }
        
        # DragonForged V2
        location /dragonforged-v2/ {
            proxy_pass http://dragonforged_v2/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        location /dragonforged-v2/webhooks/rest/webhook {
            proxy_pass http://dragonforged_v2/webhooks/rest/webhook;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_method POST;
        }
        
        # –°—Ç–∞—Ç–∏—á–Ω–∏ —Ñ–∞–π–ª–æ–≤–µ
        location / {
            root /var/www/html;
            index index.html;
            try_files $uri $uri/ =404;
        }
    }
}
"""
        
        # –ó–∞–ø–∏—Å–≤–∞–Ω–µ –Ω–∞ –Ω–æ–≤–∞—Ç–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
        ssh.exec_command("cd /root/multi-bots && echo '" + nginx_config.replace("'", "'\"'\"'") + "' > nginx.conf")
        
        # –°—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏—Ç–µ –æ—Ç–Ω–æ–≤–æ
        print("\nüöÄ –°—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏—Ç–µ...")
        ssh.exec_command("cd /root/multi-bots && docker-compose up -d")
        
        # –ò–∑—á–∞–∫–≤–∞–Ω–µ –∑–∞ —Å—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ
        print("‚è≥ –ò–∑—á–∞–∫–≤–∞–Ω–µ –∑–∞ —Å—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ...")
        time.sleep(20)
        
        # –¢–µ—Å—Ç–≤–∞–Ω–µ –Ω–∞ API endpoints
        print("\nüß™ –¢–ï–°–¢–ò–†–ê–ù–ï –ù–ê API ENDPOINTS:")
        print("="*50)
        
        test_bots = [
            ('zlatna-kosa', '–°–∞–ª–æ–Ω –ó–ª–∞—Ç–Ω–∞ –∫–æ—Å–∞'),
            ('zlatna-vilitsa', '–†–µ—Å—Ç–æ—Ä–∞–Ω—Ç –ó–ª–∞—Ç–Ω–∞ –≤–∏–ª–∏—Ü–∞'),
            ('grand-sofia', '–•–æ—Ç–µ–ª –ì—Ä–∞–Ω–¥ –°–æ—Ñ–∏—è'),
            ('zdrave-medical', '–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏ —Ü–µ–Ω—Ç—ä—Ä –ó–¥—Ä–∞–≤–µ+'),
            ('moto-expert', '–ê–≤—Ç–æ—Å–µ—Ä–≤–∏–∑ –ú–æ—Ç–æ –ï–∫—Å–ø–µ—Ä—Ç')
        ]
        
        for url_path, bot_name in test_bots:
            print(f"\nü§ñ –¢–µ—Å—Ç–≤–∞–Ω–µ –Ω–∞ {bot_name}...")
            
            # –¢–µ—Å—Ç –Ω–∞ –æ—Å–Ω–æ–≤–Ω–∏—è URL
            stdin, stdout, stderr = ssh.exec_command(f"curl -I http://localhost/{url_path}/")
            response = stdout.read().decode('utf-8')
            if "200 OK" in response:
                print(f"   ‚úÖ –û—Å–Ω–æ–≤–µ–Ω URL: OK")
            else:
                print(f"   ‚ùå –û—Å–Ω–æ–≤–µ–Ω URL: {response[:100]}...")
            
            # –¢–µ—Å—Ç –Ω–∞ API endpoint
            stdin, stdout, stderr = ssh.exec_command(f"curl -X POST http://localhost/{url_path}/webhooks/rest/webhook -H 'Content-Type: application/json' -d '{{\"message\": \"–∑–¥—Ä–∞–≤–µ–π\"}}'")
            api_response = stdout.read().decode('utf-8')
            
            if "405 Not Allowed" in api_response:
                print(f"   ‚ùå API: 405 Not Allowed")
            elif "error" in api_response.lower():
                print(f"   ‚ùå API: {api_response[:100]}...")
            else:
                print(f"   ‚úÖ API: {api_response[:100]}...")
        
        print(f"\nüéâ –ü–æ–ø—Ä–∞–≤—è–Ω–µ—Ç–æ –∑–∞–≤—ä—Ä—à–µ–Ω–æ!")
        print(f"\nüåê URL-–∏ –∑–∞ —Ç–µ—Å—Ç–≤–∞–Ω–µ:")
        for url_path, bot_name in test_bots:
            print(f"   {bot_name}: http://{host}/{url_path}/")
        
        ssh.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –ì—Ä–µ—à–∫–∞: {e}")
        return False

if __name__ == "__main__":
    fix_nginx_api()
