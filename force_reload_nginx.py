#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Force Reload Nginx
–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª–Ω–æ –ø—Ä–µ–∑–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ Nginx
"""

import json
import paramiko
import time

def load_config():
    """–ó–∞—Ä–µ–∂–¥–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è—Ç–∞"""
    with open('bots_config.json', 'r', encoding='utf-8') as f:
        return json.load(f)

def force_reload_nginx():
    """–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª–Ω–æ –ø—Ä–µ–∑–∞—Ä–µ–∂–¥–∞ Nginx"""
    print("üîÑ –ü–†–ò–ù–£–î–ò–¢–ï–õ–ù–û –ü–†–ï–ó–ê–†–ï–ñ–î–ê–ù–ï –ù–ê NGINX")
    print("="*50)
    
    config = load_config()
    host = "37.60.225.86"
    username = input("–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—Å–∫–æ –∏–º–µ (root): ").strip() or "root"
    password = input("–ü–∞—Ä–æ–ª–∞: ").strip()
    
    try:
        # –°–≤—ä—Ä–∑–≤–∞–Ω–µ —Å VPS
        ssh = paramiko.SSHClient()
        ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
        ssh.connect(host, username=username, password=password)
        print("‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–≤—ä—Ä–∑–≤–∞–Ω–µ!")
        
        # –°–ø–∏—Ä–∞–Ω–µ –Ω–∞ –≤—Å–∏—á–∫–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏
        print("\nüõë –°–ø–∏—Ä–∞–Ω–µ –Ω–∞ –≤—Å–∏—á–∫–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏...")
        ssh.exec_command("cd /root/multi-bots && docker-compose down")
        time.sleep(5)
        
        # –ò–∑—á–∏—Å—Ç–≤–∞–Ω–µ –Ω–∞ Docker –∫–µ—à–∞
        print("\nüßπ –ò–∑—á–∏—Å—Ç–≤–∞–Ω–µ –Ω–∞ Docker –∫–µ—à–∞...")
        ssh.exec_command("docker system prune -f")
        time.sleep(3)
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ñ–∞–π–ª–æ–≤–µ—Ç–µ
        print("\nüìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ index.html —Ñ–∞–π–ª–æ–≤–µ—Ç–µ:")
        
        bot_configs = {
            'zlatna_kosa': '–°–∞–ª–æ–Ω "–ó–ª–∞—Ç–Ω–∞ –∫–æ—Å–∞"',
            'zlatna_vilitsa': '–†–µ—Å—Ç–æ—Ä–∞–Ω—Ç "–ó–ª–∞—Ç–Ω–∞ –≤–∏–ª–∏—Ü–∞"',
            'grand_sofia': '–•–æ—Ç–µ–ª "–ì—Ä–∞–Ω–¥ –°–æ—Ñ–∏—è"',
            'zdrave_medical': '–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏ —Ü–µ–Ω—Ç—ä—Ä "–ó–¥—Ä–∞–≤–µ+"',
            'moto_expert': '–ê–≤—Ç–æ—Å–µ—Ä–≤–∏–∑ "–ú–æ—Ç–æ –ï–∫—Å–ø–µ—Ä—Ç"'
        }
        
        for bot_id, bot_name in bot_configs.items():
            print(f"\nü§ñ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ {bot_name}:")
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—ä–¥—ä—Ä–∂–∞–Ω–∏–µ—Ç–æ –Ω–∞ —Ñ–∞–π–ª–∞
            remote_web_dir = f"/root/multi-bots/bots/{bot_id}/web"
            stdin, stdout, stderr = ssh.exec_command(f"head -10 {remote_web_dir}/index.html")
            file_content = stdout.read().decode('utf-8')
            
            if bot_name in file_content:
                print(f"   ‚úÖ –§–∞–π–ª—ä—Ç —Å—ä–¥—ä—Ä–∂–∞ –ø—Ä–∞–≤–∏–ª–Ω–æ—Ç–æ –∑–∞–≥–ª–∞–≤–∏–µ")
            else:
                print(f"   ‚ùå –§–∞–π–ª—ä—Ç –ù–ï —Å—ä–¥—ä—Ä–∂–∞ –ø—Ä–∞–≤–∏–ª–Ω–æ—Ç–æ –∑–∞–≥–ª–∞–≤–∏–µ")
                print(f"   üìÑ –ü—ä—Ä–≤–∏—Ç–µ 10 —Ä–µ–¥–∞: {file_content[:200]}...")
        
        # –°—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏—Ç–µ –æ—Ç–Ω–æ–≤–æ
        print("\nüöÄ –°—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏—Ç–µ...")
        ssh.exec_command("cd /root/multi-bots && docker-compose up -d")
        
        # –ò–∑—á–∞–∫–≤–∞–Ω–µ –∑–∞ —Å—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ
        print("‚è≥ –ò–∑—á–∞–∫–≤–∞–Ω–µ –∑–∞ —Å—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ...")
        time.sleep(30)
        
        # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª–Ω–æ –ø—Ä–µ–∑–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ Nginx
        print("\nüîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª–Ω–æ –ø—Ä–µ–∑–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ Nginx...")
        ssh.exec_command("cd /root/multi-bots && docker-compose restart nginx")
        time.sleep(10)
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—Ç–∞—Ç—É—Å–∞
        print("\nüìä –°—Ç–∞—Ç—É—Å –Ω–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏—Ç–µ:")
        stdin, stdout, stderr = ssh.exec_command("cd /root/multi-bots && docker-compose ps")
        output = stdout.read().decode('utf-8')
        print(output)
        
        # –¢–µ—Å—Ç–≤–∞–Ω–µ –Ω–∞ —É–µ–± –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∏—Ç–µ
        print("\nüß™ –¢–ï–°–¢–ò–†–ê–ù–ï –ù–ê –£–ï–ë –ò–ù–¢–ï–†–§–ï–ô–°–ò–¢–ï:")
        print("="*50)
        
        for bot_id, bot_name in bot_configs.items():
            url_path = bot_id.replace("_", "-")
            print(f"\nü§ñ –¢–µ—Å—Ç–≤–∞–Ω–µ –Ω–∞ {bot_name}:")
            
            # –¢–µ—Å—Ç –Ω–∞ —É–µ–± –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
            stdin, stdout, stderr = ssh.exec_command(f"curl -s http://localhost/{url_path}/ | grep -i '{bot_name}'")
            content_response = stdout.read().decode('utf-8')
            
            if bot_name in content_response:
                print(f"   ‚úÖ –ü—Ä–∞–≤–∏–ª–Ω–æ –∑–∞–≥–ª–∞–≤–∏–µ: OK")
            else:
                print(f"   ‚ùå –ì—Ä–µ—à–Ω–æ –∑–∞–≥–ª–∞–≤–∏–µ")
            
            # –¢–µ—Å—Ç –Ω–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–æ—Ç–æ —Å—ä–æ–±—â–µ–Ω–∏–µ
            if 'DragonForgedDreams' in content_response:
                print(f"   ‚ùå DragonForged —Ç–µ–∫—Å—Ç: –í–°–ï –û–©–ï –°–™–©–ï–°–¢–í–£–í–ê!")
            else:
                print(f"   ‚úÖ DragonForged —Ç–µ–∫—Å—Ç: –ü—Ä–µ–º–∞—Ö–Ω–∞—Ç")
        
        print(f"\nüéâ –ü—Ä–µ–∑–∞—Ä–µ–∂–¥–∞–Ω–µ—Ç–æ –∑–∞–≤—ä—Ä—à–µ–Ω–æ!")
        print(f"\nüåê URL-–∏ –∑–∞ —Ç–µ—Å—Ç–≤–∞–Ω–µ:")
        for bot_id, bot_name in bot_configs.items():
            url_path = bot_id.replace("_", "-")
            print(f"   {bot_name}: http://{host}/{url_path}/")
        
        ssh.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –ì—Ä–µ—à–∫–∞: {e}")
        return False

if __name__ == "__main__":
    force_reload_nginx()
