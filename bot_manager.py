#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Multi-Bot Manager System
–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –º–Ω–æ–∂–µ—Å—Ç–≤–æ Rasa –±–æ—Ç–æ–≤–µ –µ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ
"""

import json
import os
import subprocess
import time
import threading
import requests
from datetime import datetime
import psutil
import signal
import sys

class BotManager:
    def __init__(self):
        self.bots_file = "active_bots.json"
        self.active_bots = self.load_bots()
        self.processes = {}
        
    def load_bots(self):
        """–ó–∞—Ä–µ–∂–¥–∞ –∞–∫—Ç–∏–≤–Ω–∏—Ç–µ –±–æ—Ç–æ–≤–µ –æ—Ç —Ñ–∞–π–ª"""
        if os.path.exists(self.bots_file):
            try:
                with open(self.bots_file, 'r', encoding='utf-8') as f:
                    return json.load(f)
            except:
                return {}
        return {}
    
    def save_bots(self):
        """–ó–∞–ø–∞–∑–≤–∞ –∞–∫—Ç–∏–≤–Ω–∏—Ç–µ –±–æ—Ç–æ–≤–µ –≤—ä–≤ —Ñ–∞–π–ª"""
        with open(self.bots_file, 'w', encoding='utf-8') as f:
            json.dump(self.active_bots, f, indent=2, ensure_ascii=False)
    
    def add_bot(self, bot_name, bot_path, port, description=""):
        """–î–æ–±–∞–≤—è –Ω–æ–≤ –±–æ—Ç"""
        if port in [bot['port'] for bot in self.active_bots.values()]:
            print(f"‚ùå –ü–æ—Ä—Ç {port} –≤–µ—á–µ —Å–µ –∏–∑–ø–æ–ª–∑–≤–∞!")
            return False
            
        self.active_bots[bot_name] = {
            'path': bot_path,
            'port': port,
            'description': description,
            'status': 'stopped',
            'started_at': None,
            'pid': None,
            'url': f"http://localhost:{port}",
            'webhook_url': f"http://localhost:{port}/webhooks/rest/webhook"
        }
        self.save_bots()
        print(f"‚úÖ –ë–æ—Ç '{bot_name}' –¥–æ–±–∞–≤–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        return True
    
    def remove_bot(self, bot_name):
        """–ü—Ä–µ–º–∞—Ö–≤–∞ –±–æ—Ç"""
        if bot_name in self.active_bots:
            if self.active_bots[bot_name]['status'] == 'running':
                self.stop_bot(bot_name)
            del self.active_bots[bot_name]
            self.save_bots()
            print(f"‚úÖ –ë–æ—Ç '{bot_name}' –ø—Ä–µ–º–∞—Ö–Ω–∞—Ç!")
        else:
            print(f"‚ùå –ë–æ—Ç '{bot_name}' –Ω–µ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞!")
    
    def start_bot(self, bot_name):
        """–°—Ç–∞—Ä—Ç–∏—Ä–∞ –±–æ—Ç"""
        if bot_name not in self.active_bots:
            print(f"‚ùå –ë–æ—Ç '{bot_name}' –Ω–µ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞!")
            return False
            
        bot = self.active_bots[bot_name]
        if bot['status'] == 'running':
            print(f"‚ö†Ô∏è –ë–æ—Ç '{bot_name}' –≤–µ—á–µ —Ä–∞–±–æ—Ç–∏!")
            return True
            
        bot_path = bot['path']
        port = bot['port']
        
        if not os.path.exists(bot_path):
            print(f"‚ùå –ü—ä—Ç—è—Ç '{bot_path}' –Ω–µ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞!")
            return False
        
        try:
            # –°—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ Rasa —Å—ä—Ä–≤—ä—Ä–∞
            cmd = [
                sys.executable, "-m", "rasa", "run",
                "--port", str(port),
                "--enable-api",
                "--cors", "*",
                "--model", "models"
            ]
            
            process = subprocess.Popen(
                cmd,
                cwd=bot_path,
                stdout=subprocess.PIPE,
                stderr=subprocess.PIPE,
                text=True
            )
            
            # –ò–∑—á–∞–∫–≤–∞–Ω–µ –º–∞–ª–∫–æ –∑–∞ —Å—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ
            time.sleep(3)
            
            if process.poll() is None:  # –ü—Ä–æ—Ü–µ—Å—ä—Ç –≤—Å–µ –æ—â–µ —Ä–∞–±–æ—Ç–∏
                bot['status'] = 'running'
                bot['pid'] = process.pid
                bot['started_at'] = datetime.now().isoformat()
                self.processes[bot_name] = process
                self.save_bots()
                print(f"‚úÖ –ë–æ—Ç '{bot_name}' —Å—Ç–∞—Ä—Ç–∏—Ä–∞–Ω –Ω–∞ –ø–æ—Ä—Ç {port}!")
                return True
            else:
                print(f"‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ –±–æ—Ç '{bot_name}'!")
                return False
                
        except Exception as e:
            print(f"‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ –±–æ—Ç '{bot_name}': {e}")
            return False
    
    def stop_bot(self, bot_name):
        """–°–ø–∏—Ä–∞ –±–æ—Ç"""
        if bot_name not in self.active_bots:
            print(f"‚ùå –ë–æ—Ç '{bot_name}' –Ω–µ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞!")
            return False
            
        bot = self.active_bots[bot_name]
        if bot['status'] != 'running':
            print(f"‚ö†Ô∏è –ë–æ—Ç '{bot_name}' –Ω–µ —Ä–∞–±–æ—Ç–∏!")
            return True
        
        try:
            if bot_name in self.processes:
                process = self.processes[bot_name]
                process.terminate()
                process.wait(timeout=5)
                del self.processes[bot_name]
            
            bot['status'] = 'stopped'
            bot['pid'] = None
            bot['started_at'] = None
            self.save_bots()
            print(f"‚úÖ –ë–æ—Ç '{bot_name}' —Å–ø—Ä—è–Ω!")
            return True
            
        except Exception as e:
            print(f"‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —Å–ø–∏—Ä–∞–Ω–µ –Ω–∞ –±–æ—Ç '{bot_name}': {e}")
            return False
    
    def restart_bot(self, bot_name):
        """–†–µ—Å—Ç–∞—Ä—Ç–∏—Ä–∞ –±–æ—Ç"""
        print(f"üîÑ –†–µ—Å—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ –±–æ—Ç '{bot_name}'...")
        self.stop_bot(bot_name)
        time.sleep(2)
        return self.start_bot(bot_name)
    
    def check_bot_status(self, bot_name):
        """–ü—Ä–æ–≤–µ—Ä—è–≤–∞ —Å—Ç–∞—Ç—É—Å–∞ –Ω–∞ –±–æ—Ç"""
        if bot_name not in self.active_bots:
            print(f"‚ùå –ë–æ—Ç '{bot_name}' –Ω–µ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞!")
            return False
            
        bot = self.active_bots[bot_name]
        
        if bot['status'] != 'running':
            print(f"‚ö†Ô∏è –ë–æ—Ç '{bot_name}' –Ω–µ —Ä–∞–±–æ—Ç–∏!")
            return False
        
        try:
            response = requests.get(f"{bot['url']}/status", timeout=5)
            if response.status_code == 200:
                print(f"‚úÖ –ë–æ—Ç '{bot_name}' —Ä–∞–±–æ—Ç–∏ –Ω–æ—Ä–º–∞–ª–Ω–æ!")
                return True
            else:
                print(f"‚ö†Ô∏è –ë–æ—Ç '{bot_name}' –æ—Ç–≥–æ–≤–∞—Ä—è, –Ω–æ —Å –≥—Ä–µ—à–∫–∞!")
                return False
        except:
            print(f"‚ùå –ë–æ—Ç '{bot_name}' –Ω–µ –æ—Ç–≥–æ–≤–∞—Ä—è!")
            return False
    
    def list_bots(self):
        """–ü–æ–∫–∞–∑–≤–∞ —Å–ø–∏—Å—ä–∫ —Å –≤—Å–∏—á–∫–∏ –±–æ—Ç–æ–≤–µ"""
        if not self.active_bots:
            print("üìù –ù—è–º–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–∞–Ω–∏ –±–æ—Ç–æ–≤–µ!")
            return
        
        print("\n" + "="*80)
        print("ü§ñ –°–ü–ò–°–™–ö –° –ë–û–¢–û–í–ï")
        print("="*80)
        
        for name, bot in self.active_bots.items():
            status_icon = "üü¢" if bot['status'] == 'running' else "üî¥"
            print(f"\n{status_icon} {name}")
            print(f"   üìÅ –ü—ä—Ç: {bot['path']}")
            print(f"   üåê –ü–æ—Ä—Ç: {bot['port']}")
            print(f"   üìù –û–ø–∏—Å–∞–Ω–∏–µ: {bot['description']}")
            print(f"   üîó URL: {bot['url']}")
            print(f"   üîó Webhook: {bot['webhook_url']}")
            
            if bot['status'] == 'running':
                print(f"   ‚è∞ –°—Ç–∞—Ä—Ç–∏—Ä–∞–Ω: {bot['started_at']}")
                print(f"   üÜî PID: {bot['pid']}")
        
        print("\n" + "="*80)
    
    def start_all_bots(self):
        """–°—Ç–∞—Ä—Ç–∏—Ä–∞ –≤—Å–∏—á–∫–∏ –±–æ—Ç–æ–≤–µ"""
        print("üöÄ –°—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ –≤—Å–∏—á–∫–∏ –±–æ—Ç–æ–≤–µ...")
        for bot_name in self.active_bots.keys():
            self.start_bot(bot_name)
            time.sleep(2)
    
    def stop_all_bots(self):
        """–°–ø–∏—Ä–∞ –≤—Å–∏—á–∫–∏ –±–æ—Ç–æ–≤–µ"""
        print("üõë –°–ø–∏—Ä–∞–Ω–µ –Ω–∞ –≤—Å–∏—á–∫–∏ –±–æ—Ç–æ–≤–µ...")
        for bot_name in list(self.active_bots.keys()):
            self.stop_bot(bot_name)
    
    def monitor_bots(self):
        """–ú–æ–Ω–∏—Ç–æ—Ä–∏—Ä–∞ –±–æ—Ç–æ–≤–µ—Ç–µ"""
        print("üëÄ –ú–æ–Ω–∏—Ç–æ—Ä–∏—Ä–∞–Ω–µ –Ω–∞ –±–æ—Ç–æ–≤–µ—Ç–µ...")
        while True:
            for bot_name in self.active_bots.keys():
                if self.active_bots[bot_name]['status'] == 'running':
                    if not self.check_bot_status(bot_name):
                        print(f"üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —Ä–µ—Å—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ {bot_name}...")
                        self.restart_bot(bot_name)
            time.sleep(30)  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤—Å–µ–∫–∏ 30 —Å–µ–∫—É–Ω–¥–∏

def main():
    manager = BotManager()
    
    # –î–æ–±–∞–≤—è–Ω–µ –Ω–∞ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª–Ω–æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä–∞–Ω–∏ –±–æ—Ç–æ–≤–µ
    if not manager.active_bots:
        print("üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–∞–Ω–µ –Ω–∞ –±–æ—Ç–æ–≤–µ...")
        
        # DragonForged Dreams V2
        manager.add_bot(
            "dragonforged_v2",
            "bots/dragonforged_bot_v2/rasa",
            5005,
            "DragonForged Dreams Bot V2 - IT —É—Å–ª—É–≥–∏ –∏ –∫–æ–Ω—Å—É–ª—Ç–∞—Ü–∏–∏"
        )
        
        # –°–∞–ª–æ–Ω –ó–ª–∞—Ç–Ω–∞ –∫–æ—Å–∞
        manager.add_bot(
            "zlatna_kosa",
            "bots/zlatna_kosa_salon/rasa",
            5006,
            "–°–∞–ª–æ–Ω '–ó–ª–∞—Ç–Ω–∞ –∫–æ—Å–∞' - –ö—Ä–∞—Å–∏–≤ —Å–∞–ª–æ–Ω –∏ —É—Å–ª—É–≥–∏"
        )
        
        # –†–µ—Å—Ç–æ—Ä–∞–Ω—Ç –ó–ª–∞—Ç–Ω–∞ –≤–∏–ª–∏—Ü–∞
        manager.add_bot(
            "zlatna_vilitsa",
            "bots/zlatna_vilitsa_restaurant/rasa",
            5008,
            "–†–µ—Å—Ç–æ—Ä–∞–Ω—Ç '–ó–ª–∞—Ç–Ω–∞ –≤–∏–ª–∏—Ü–∞' - –ê–≤—Ç–µ–Ω—Ç–∏—á–Ω–∏ –≤–∫—É—Å–æ–≤–µ –∏ —Ç–æ–ø–ª–∞ –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞"
        )
        

    
    while True:
        print("\n" + "="*60)
        print("ü§ñ –ú–£–õ–¢–ò-–ë–û–¢ –ú–ï–ù–ò–î–ñ–™–†")
        print("="*60)
        print("1. üìã –°–ø–∏—Å—ä–∫ —Å –±–æ—Ç–æ–≤–µ")
        print("2. üöÄ –°—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ –±–æ—Ç")
        print("3. üõë –°–ø–∏—Ä–∞–Ω–µ –Ω–∞ –±–æ—Ç")
        print("4. üîÑ –†–µ—Å—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ –±–æ—Ç")
        print("5. ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—Ç–∞—Ç—É—Å")
        print("6. üöÄ –°—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ –≤—Å–∏—á–∫–∏")
        print("7. üõë –°–ø–∏—Ä–∞–Ω–µ –Ω–∞ –≤—Å–∏—á–∫–∏")
        print("8. ‚ûï –î–æ–±–∞–≤—è–Ω–µ –Ω–∞ –Ω–æ–≤ –±–æ—Ç")
        print("9. ‚ûñ –ü—Ä–µ–º–∞—Ö–≤–∞–Ω–µ –Ω–∞ –±–æ—Ç")
        print("10. üëÄ –ú–æ–Ω–∏—Ç–æ—Ä–∏—Ä–∞–Ω–µ")
        print("0. üö™ –ò–∑—Ö–æ–¥")
        print("="*60)
        
        choice = input("\n–ò–∑–±–µ—Ä–µ—Ç–µ –æ–ø—Ü–∏—è: ").strip()
        
        if choice == "1":
            manager.list_bots()
            
        elif choice == "2":
            manager.list_bots()
            bot_name = input("–í—ä–≤–µ–¥–µ—Ç–µ –∏–º–µ –Ω–∞ –±–æ—Ç–∞: ").strip()
            manager.start_bot(bot_name)
            
        elif choice == "3":
            manager.list_bots()
            bot_name = input("–í—ä–≤–µ–¥–µ—Ç–µ –∏–º–µ –Ω–∞ –±–æ—Ç–∞: ").strip()
            manager.stop_bot(bot_name)
            
        elif choice == "4":
            manager.list_bots()
            bot_name = input("–í—ä–≤–µ–¥–µ—Ç–µ –∏–º–µ –Ω–∞ –±–æ—Ç–∞: ").strip()
            manager.restart_bot(bot_name)
            
        elif choice == "5":
            manager.list_bots()
            bot_name = input("–í—ä–≤–µ–¥–µ—Ç–µ –∏–º–µ –Ω–∞ –±–æ—Ç–∞: ").strip()
            manager.check_bot_status(bot_name)
            
        elif choice == "6":
            manager.start_all_bots()
            
        elif choice == "7":
            manager.stop_all_bots()
            
        elif choice == "8":
            bot_name = input("–ò–º–µ –Ω–∞ –±–æ—Ç–∞: ").strip()
            bot_path = input("–ü—ä—Ç –¥–æ Rasa –ø–∞–ø–∫–∞—Ç–∞: ").strip()
            port = int(input("–ü–æ—Ä—Ç: ").strip())
            description = input("–û–ø–∏—Å–∞–Ω–∏–µ: ").strip()
            manager.add_bot(bot_name, bot_path, port, description)
            
        elif choice == "9":
            manager.list_bots()
            bot_name = input("–í—ä–≤–µ–¥–µ—Ç–µ –∏–º–µ –Ω–∞ –±–æ—Ç–∞: ").strip()
            manager.remove_bot(bot_name)
            
        elif choice == "10":
            print("üëÄ –°—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏—Ä–∞–Ω–µ... (Ctrl+C –∑–∞ —Å–ø–∏—Ä–∞–Ω–µ)")
            try:
                manager.monitor_bots()
            except KeyboardInterrupt:
                print("\nüõë –ú–æ–Ω–∏—Ç–æ—Ä–∏—Ä–∞–Ω–µ—Ç–æ —Å–ø—Ä—è–Ω–æ!")
                
        elif choice == "0":
            print("üõë –°–ø–∏—Ä–∞–Ω–µ –Ω–∞ –≤—Å–∏—á–∫–∏ –±–æ—Ç–æ–≤–µ...")
            manager.stop_all_bots()
            print("üëã –î–æ–≤–∏–∂–¥–∞–Ω–µ!")
            break
            
        else:
            print("‚ùå –ù–µ–≤–∞–ª–∏–¥–Ω–∞ –æ–ø—Ü–∏—è!")
        
        input("\n–ù–∞—Ç–∏—Å–Ω–µ—Ç–µ Enter –∑–∞ –ø—Ä–æ–¥—ä–ª–∂–µ–Ω–∏–µ...")

if __name__ == "__main__":
    main()
