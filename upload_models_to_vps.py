#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Upload Trained Models to VPS
–ö–∞—á–≤–∞–Ω–µ –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–∞–Ω–∏—Ç–µ –º–æ–¥–µ–ª–∏ –Ω–∞ VPS
"""

import json
import os
import paramiko
import time

def load_config():
    """–ó–∞—Ä–µ–∂–¥–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è—Ç–∞"""
    with open('bots_config.json', 'r', encoding='utf-8') as f:
        return json.load(f)

def upload_models_to_vps():
    """–ö–∞—á–≤–∞ —Ç—Ä–µ–Ω–∏—Ä–∞–Ω–∏—Ç–µ –º–æ–¥–µ–ª–∏ –Ω–∞ VPS"""
    print("üì§ –ö–ê–ß–í–ê–ù–ï –ù–ê –ú–û–î–ï–õ–ò –ù–ê VPS")
    print("="*50)
    
    config = load_config()
    host = "37.60.225.86"
    username = input("–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—Å–∫–æ –∏–º–µ (root): ").strip() or "root"
    password = input("–ü–∞—Ä–æ–ª–∞: ").strip()
    
    try:
        # –°–≤—ä—Ä–∑–≤–∞–Ω–µ —Å VPS
        ssh = paramiko.SSHClient()
        ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
        ssh.connect(host, username=username, password=password)
        print("‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–≤—ä—Ä–∑–≤–∞–Ω–µ!")
        
        # –°–ø–∏—Ä–∞–Ω–µ –Ω–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏—Ç–µ
        print("\nüõë –°–ø–∏—Ä–∞–Ω–µ –Ω–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏—Ç–µ...")
        ssh.exec_command("cd /root/multi-bots && docker-compose down")
        time.sleep(5)
        
        # –ö–∞—á–≤–∞–Ω–µ –Ω–∞ –º–æ–¥–µ–ª–∏—Ç–µ
        print("\nüì§ –ö–∞—á–≤–∞–Ω–µ –Ω–∞ –º–æ–¥–µ–ª–∏...")
        sftp = ssh.open_sftp()
        
        new_bots = {
            'zlatna_kosa': config['bots']['zlatna_kosa'],
            'zlatna_vilitsa': config['bots']['zlatna_vilitsa'],
            'grand_sofia': config['bots']['grand_sofia'],
            'zdrave_medical': config['bots']['zdrave_medical'],
            'moto_expert': config['bots']['moto_expert']
        }
        
        for bot_id, bot_config in new_bots.items():
            print(f"\nüì§ –ö–∞—á–≤–∞–Ω–µ –Ω–∞ –º–æ–¥–µ–ª–∏ –∑–∞ {bot_config['name']}...")
            
            local_models_dir = os.path.join(bot_config['path'], 'models')
            remote_models_dir = f"/root/multi-bots/{bot_config['path']}/models"
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–ª–∏ –∏–º–∞ –º–æ–¥–µ–ª–∏ –ª–æ–∫–∞–ª–Ω–æ
            if not os.path.exists(local_models_dir):
                print(f"   ‚ö†Ô∏è  –ù—è–º–∞ models –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –∑–∞ {bot_id}")
                continue
            
            # –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ remote models –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è
            ssh.exec_command(f"mkdir -p {remote_models_dir}")
            
            # –ö–∞—á–≤–∞–Ω–µ –Ω–∞ –≤—Å–∏—á–∫–∏ –º–æ–¥–µ–ª–∏
            models = [f for f in os.listdir(local_models_dir) if f.endswith('.tar.gz')]
            if not models:
                print(f"   ‚ö†Ô∏è  –ù—è–º–∞ –º–æ–¥–µ–ª–∏ –≤ {local_models_dir}")
                continue
            
            for model_file in models:
                local_model_path = os.path.join(local_models_dir, model_file)
                remote_model_path = f"{remote_models_dir}/{model_file}"
                
                print(f"   üì¶ –ö–∞—á–≤–∞–Ω–µ –Ω–∞ {model_file}...")
                sftp.put(local_model_path, remote_model_path)
                print(f"   ‚úÖ {model_file} –∫–∞—á–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        
        sftp.close()
        
        # –°—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏—Ç–µ –æ—Ç–Ω–æ–≤–æ
        print("\nüöÄ –°—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏—Ç–µ...")
        ssh.exec_command("cd /root/multi-bots && docker-compose up -d")
        
        # –ò–∑—á–∞–∫–≤–∞–Ω–µ –∑–∞ —Å—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ
        print("‚è≥ –ò–∑—á–∞–∫–≤–∞–Ω–µ –∑–∞ —Å—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ...")
        time.sleep(20)
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—Ç–∞—Ç—É—Å–∞
        print("\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—Ç–∞—Ç—É—Å–∞...")
        stdin, stdout, stderr = ssh.exec_command("cd /root/multi-bots && docker-compose ps")
        output = stdout.read().decode('utf-8')
        print(output)
        
        # –¢–µ—Å—Ç–≤–∞–Ω–µ –Ω–∞ API endpoints
        print("\nüß™ –¢–µ—Å—Ç–≤–∞–Ω–µ –Ω–∞ API endpoints...")
        for bot_id, bot_config in new_bots.items():
            url_path = bot_id.replace("_", "-")
            api_url = f"http://localhost/{url_path}/webhooks/rest/webhook"
            print(f"–¢–µ—Å—Ç–≤–∞–Ω–µ –Ω–∞ {bot_config['name']}: {api_url}")
            
            stdin, stdout, stderr = ssh.exec_command(f"curl -X POST {api_url} -H 'Content-Type: application/json' -d '{{\"message\": \"–∑–¥—Ä–∞–≤–µ–π\"}}'")
            response = stdout.read().decode('utf-8')
            print(f"–û—Ç–≥–æ–≤–æ—Ä: {response[:200]}...")
        
        print("\nüéâ –ö–∞—á–≤–∞–Ω–µ—Ç–æ –∑–∞–≤—ä—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
        print("\nüìã –ë–æ—Ç–æ–≤–µ —Å –Ω–æ–≤–∏ –º–æ–¥–µ–ª–∏:")
        for bot_id, bot_config in new_bots.items():
            url_path = bot_id.replace("_", "-")
            print(f"   {bot_config['name']}: http://{host}/{url_path}/")
        
        ssh.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –ì—Ä–µ—à–∫–∞: {e}")
        return False

if __name__ == "__main__":
    upload_models_to_vps()
