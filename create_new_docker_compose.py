#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Create New Docker Compose
–°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –Ω–æ–≤ Docker Compose —Ñ–∞–π–ª
"""

import paramiko
import time

def create_new_docker_compose():
    """–°—ä–∑–¥–∞–≤–∞ –Ω–æ–≤ Docker Compose —Ñ–∞–π–ª"""
    print("üìù –°–™–ó–î–ê–í–ê–ù–ï –ù–ê –ù–û–í DOCKER COMPOSE –§–ê–ô–õ")
    print("="*50)
    
    host = "37.60.225.86"
    username = input("–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—Å–∫–æ –∏–º–µ (root): ").strip() or "root"
    password = input("–ü–∞—Ä–æ–ª–∞: ").strip()
    
    try:
        # –°–≤—ä—Ä–∑–≤–∞–Ω–µ —Å VPS
        ssh = paramiko.SSHClient()
        ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
        ssh.connect(host, username=username, password=password)
        print("‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–≤—ä—Ä–∑–≤–∞–Ω–µ!")
        
        # –°–ø–∏—Ä–∞–Ω–µ –Ω–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏—Ç–µ
        print("\nüõë –°–ø–∏—Ä–∞–Ω–µ –Ω–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏—Ç–µ...")
        ssh.exec_command("cd /root/multi-bots && docker-compose down")
        time.sleep(5)
        
        # –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –Ω–æ–≤ Docker Compose —Ñ–∞–π–ª
        print("\nüìù –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –Ω–æ–≤ Docker Compose —Ñ–∞–π–ª...")
        
        docker_compose = """version: '3.8'

services:
  zlatna_kosa:
    image: rasa/rasa:3.6.21
    container_name: zlatna_kosa
    ports:
      - "5006:5005"
    volumes:
      - ./bots/zlatna_kosa_salon/rasa:/app
    working_dir: /app
    command: run --enable-api --cors "*" --port 5005
    restart: unless-stopped
    networks:
      - bot-network

  zlatna_vilitsa:
    image: rasa/rasa:3.6.21
    container_name: zlatna_vilitsa
    ports:
      - "5008:5005"
    volumes:
      - ./bots/zlatna_vilitsa_restaurant/rasa:/app
    working_dir: /app
    command: run --enable-api --cors "*" --port 5005
    restart: unless-stopped
    networks:
      - bot-network

  grand_sofia:
    image: rasa/rasa:3.6.21
    container_name: grand_sofia
    ports:
      - "5009:5005"
    volumes:
      - ./bots/grand_sofia_hotel/rasa:/app
    working_dir: /app
    command: run --enable-api --cors "*" --port 5005
    restart: unless-stopped
    networks:
      - bot-network

  zdrave_medical:
    image: rasa/rasa:3.6.21
    container_name: zdrave_medical
    ports:
      - "5010:5005"
    volumes:
      - ./bots/zdrave_medical_center/rasa:/app
    working_dir: /app
    command: run --enable-api --cors "*" --port 5005
    restart: unless-stopped
    networks:
      - bot-network

  moto_expert:
    image: rasa/rasa:3.6.21
    container_name: moto_expert
    ports:
      - "5011:5005"
    volumes:
      - ./bots/moto_expert_autoservice/rasa:/app
    working_dir: /app
    command: run --enable-api --cors "*" --port 5005
    restart: unless-stopped
    networks:
      - bot-network

  nginx:
    image: nginx:alpine
    container_name: multi-bot-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./web_interfaces:/var/www/html
    depends_on:
      - zlatna_kosa
      - zlatna_vilitsa
      - grand_sofia
      - zdrave_medical
      - moto_expert
    restart: unless-stopped
    networks:
      - bot-network

networks:
  bot-network:
    driver: bridge
"""
        
        # –ó–∞–ø–∏—Å–≤–∞–Ω–µ –Ω–∞ –Ω–æ–≤–∏—è —Ñ–∞–π–ª
        ssh.exec_command("cd /root/multi-bots && echo '" + docker_compose.replace("'", "'\"'\"'") + "' > docker-compose.yml")
        
        # –°—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏—Ç–µ
        print("\nüöÄ –°—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏—Ç–µ...")
        ssh.exec_command("cd /root/multi-bots && docker-compose up -d")
        
        # –ò–∑—á–∞–∫–≤–∞–Ω–µ –∑–∞ —Å—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ
        print("‚è≥ –ò–∑—á–∞–∫–≤–∞–Ω–µ –∑–∞ —Å—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ...")
        time.sleep(20)
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—Ç–∞—Ç—É—Å–∞
        print("\nüìä –°—Ç–∞—Ç—É—Å –Ω–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏—Ç–µ:")
        stdin, stdout, stderr = ssh.exec_command("cd /root/multi-bots && docker-compose ps")
        output = stdout.read().decode('utf-8')
        print(output)
        
        # –¢–µ—Å—Ç–≤–∞–Ω–µ –Ω–∞ —É–µ–± –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∏—Ç–µ
        print("\nüß™ –¢–ï–°–¢–ò–†–ê–ù–ï –ù–ê –£–ï–ë –ò–ù–¢–ï–†–§–ï–ô–°–ò–¢–ï:")
        print("="*50)
        
        test_urls = [
            ('zlatna-kosa', '–°–∞–ª–æ–Ω "–ó–ª–∞—Ç–Ω–∞ –∫–æ—Å–∞"'),
            ('zlatna-vilitsa', '–†–µ—Å—Ç–æ—Ä–∞–Ω—Ç "–ó–ª–∞—Ç–Ω–∞ –≤–∏–ª–∏—Ü–∞"'),
            ('grand-sofia', '–•–æ—Ç–µ–ª "–ì—Ä–∞–Ω–¥ –°–æ—Ñ–∏—è"'),
            ('zdrave-medical', '–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏ —Ü–µ–Ω—Ç—ä—Ä "–ó–¥—Ä–∞–≤–µ+"'),
            ('moto-expert', '–ê–≤—Ç–æ—Å–µ—Ä–≤–∏–∑ "–ú–æ—Ç–æ –ï–∫—Å–ø–µ—Ä—Ç"')
        ]
        
        for url_path, bot_name in test_urls:
            print(f"\nü§ñ –¢–µ—Å—Ç–≤–∞–Ω–µ –Ω–∞ {bot_name}:")
            
            # –¢–µ—Å—Ç –Ω–∞ —É–µ–± –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
            stdin, stdout, stderr = ssh.exec_command(f"curl -s http://localhost/{url_path}/ | grep -i '{bot_name}'")
            content_response = stdout.read().decode('utf-8')
            
            if bot_name in content_response:
                print(f"   ‚úÖ –ü—Ä–∞–≤–∏–ª–Ω–æ –∑–∞–≥–ª–∞–≤–∏–µ: OK")
            else:
                print(f"   ‚ùå –ì—Ä–µ—à–Ω–æ –∑–∞–≥–ª–∞–≤–∏–µ")
            
            # –¢–µ—Å—Ç –Ω–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–æ—Ç–æ —Å—ä–æ–±—â–µ–Ω–∏–µ
            if 'DragonForgedDreams' in content_response:
                print(f"   ‚ùå DragonForged —Ç–µ–∫—Å—Ç: –í–°–ï –û–©–ï –°–™–©–ï–°–¢–í–£–í–ê!")
            else:
                print(f"   ‚úÖ DragonForged —Ç–µ–∫—Å—Ç: –ü—Ä–µ–º–∞—Ö–Ω–∞—Ç")
        
        print(f"\nüéâ –°—ä–∑–¥–∞–≤–∞–Ω–µ—Ç–æ –∑–∞–≤—ä—Ä—à–µ–Ω–æ!")
        print(f"\nüåê URL-–∏ –∑–∞ —Ç–µ—Å—Ç–≤–∞–Ω–µ:")
        for url_path, bot_name in test_urls:
            print(f"   {bot_name}: http://{host}/{url_path}/")
        
        ssh.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –ì—Ä–µ—à–∫–∞: {e}")
        return False

if __name__ == "__main__":
    create_new_docker_compose()
