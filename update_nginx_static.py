#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Update Nginx for Static Files
–û–±–Ω–æ–≤—è–≤–∞–Ω–µ –Ω–∞ Nginx –∑–∞ —Å—Ç–∞—Ç–∏—á–Ω–∏ —Ñ–∞–π–ª–æ–≤–µ
"""

import paramiko
import time

def update_nginx_static():
    """–û–±–Ω–æ–≤—è–≤–∞ Nginx –∑–∞ —Å—Ç–∞—Ç–∏—á–Ω–∏ —Ñ–∞–π–ª–æ–≤–µ"""
    print("üîß –û–ë–ù–û–í–Ø–í–ê–ù–ï –ù–ê NGINX –ó–ê –°–¢–ê–¢–ò–ß–ù–ò –§–ê–ô–õ–û–í–ï")
    print("="*50)
    
    host = "37.60.225.86"
    username = input("–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—Å–∫–æ –∏–º–µ (root): ").strip() or "root"
    password = input("–ü–∞—Ä–æ–ª–∞: ").strip()
    
    try:
        # –°–≤—ä—Ä–∑–≤–∞–Ω–µ —Å VPS
        ssh = paramiko.SSHClient()
        ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
        ssh.connect(host, username=username, password=password)
        print("‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–≤—ä—Ä–∑–≤–∞–Ω–µ!")
        
        # –°–ø–∏—Ä–∞–Ω–µ –Ω–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏—Ç–µ
        print("\nüõë –°–ø–∏—Ä–∞–Ω–µ –Ω–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏—Ç–µ...")
        ssh.exec_command("cd /root/multi-bots && docker-compose down")
        time.sleep(5)
        
        # –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –Ω–æ–≤–∞ Nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
        print("\nüîß –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –Ω–æ–≤–∞ Nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è...")
        
        nginx_config = """events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    upstream zlatna_kosa {
        server zlatna_kosa:5005;
    }
    
    upstream zlatna_vilitsa {
        server zlatna_vilitsa:5008;
    }
    
    upstream grand_sofia {
        server grand_sofia:5009;
    }
    
    upstream zdrave_medical {
        server zdrave_medical:5010;
    }
    
    upstream moto_expert {
        server moto_expert:5011;
    }
    
    upstream dragonforged_v2 {
        server dragonforged_v2:5005;
    }
    
    server {
        listen 80;
        server_name 37.60.225.86;
        
        # –°–∞–ª–æ–Ω –ó–ª–∞—Ç–Ω–∞ –∫–æ—Å–∞ - —Å—Ç–∞—Ç–∏—á–µ–Ω —Ñ–∞–π–ª
        location = /zlatna-kosa/ {
            alias /root/multi-bots/bots/zlatna_kosa_salon/web/index.html;
            default_type text/html;
        }
        
        location /zlatna-kosa/webhooks/rest/webhook {
            proxy_pass http://zlatna_kosa/webhooks/rest/webhook;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_method POST;
        }
        
        # –†–µ—Å—Ç–æ—Ä–∞–Ω—Ç –ó–ª–∞—Ç–Ω–∞ –≤–∏–ª–∏—Ü–∞ - —Å—Ç–∞—Ç–∏—á–µ–Ω —Ñ–∞–π–ª
        location = /zlatna-vilitsa/ {
            alias /root/multi-bots/bots/zlatna_vilitsa_restaurant/web/index.html;
            default_type text/html;
        }
        
        location /zlatna-vilitsa/webhooks/rest/webhook {
            proxy_pass http://zlatna_vilitsa/webhooks/rest/webhook;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_method POST;
        }
        
        # –•–æ—Ç–µ–ª –ì—Ä–∞–Ω–¥ –°–æ—Ñ–∏—è - —Å—Ç–∞—Ç–∏—á–µ–Ω —Ñ–∞–π–ª
        location = /grand-sofia/ {
            alias /root/multi-bots/bots/grand_sofia_hotel/web/index.html;
            default_type text/html;
        }
        
        location /grand-sofia/webhooks/rest/webhook {
            proxy_pass http://grand_sofia/webhooks/rest/webhook;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_method POST;
        }
        
        # –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏ —Ü–µ–Ω—Ç—ä—Ä –ó–¥—Ä–∞–≤–µ+ - —Å—Ç–∞—Ç–∏—á–µ–Ω —Ñ–∞–π–ª
        location = /zdrave-medical/ {
            alias /root/multi-bots/bots/zdrave_medical_center/web/index.html;
            default_type text/html;
        }
        
        location /zdrave-medical/webhooks/rest/webhook {
            proxy_pass http://zdrave_medical/webhooks/rest/webhook;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_method POST;
        }
        
        # –ê–≤—Ç–æ—Å–µ—Ä–≤–∏–∑ –ú–æ—Ç–æ –ï–∫—Å–ø–µ—Ä—Ç - —Å—Ç–∞—Ç–∏—á–µ–Ω —Ñ–∞–π–ª
        location = /moto-expert/ {
            alias /root/multi-bots/bots/moto_expert_autoservice/web/index.html;
            default_type text/html;
        }
        
        location /moto-expert/webhooks/rest/webhook {
            proxy_pass http://moto_expert/webhooks/rest/webhook;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_method POST;
        }
        
        # DragonForged V2
        location /dragonforged-v2/ {
            proxy_pass http://dragonforged_v2/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        location /dragonforged-v2/webhooks/rest/webhook {
            proxy_pass http://dragonforged_v2/webhooks/rest/webhook;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_method POST;
        }
        
        # –°—Ç–∞—Ç–∏—á–Ω–∏ —Ñ–∞–π–ª–æ–≤–µ
        location / {
            root /var/www/html;
            index index.html;
            try_files $uri $uri/ =404;
        }
    }
}
"""
        
        # –ó–∞–ø–∏—Å–≤–∞–Ω–µ –Ω–∞ –Ω–æ–≤–∞—Ç–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
        ssh.exec_command("cd /root/multi-bots && echo '" + nginx_config.replace("'", "'\"'\"'") + "' > nginx.conf")
        
        # –°—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏—Ç–µ
        print("\nüöÄ –°—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏—Ç–µ...")
        ssh.exec_command("cd /root/multi-bots && docker-compose up -d")
        
        # –ò–∑—á–∞–∫–≤–∞–Ω–µ –∑–∞ —Å—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ
        print("‚è≥ –ò–∑—á–∞–∫–≤–∞–Ω–µ –∑–∞ —Å—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ...")
        time.sleep(20)
        
        # –¢–µ—Å—Ç–≤–∞–Ω–µ –Ω–∞ —É–µ–± –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∏—Ç–µ
        print("\nüß™ –¢–ï–°–¢–ò–†–ê–ù–ï –ù–ê –£–ï–ë –ò–ù–¢–ï–†–§–ï–ô–°–ò–¢–ï:")
        print("="*50)
        
        test_urls = [
            ('zlatna-kosa', '–°–∞–ª–æ–Ω "–ó–ª–∞—Ç–Ω–∞ –∫–æ—Å–∞"'),
            ('zlatna-vilitsa', '–†–µ—Å—Ç–æ—Ä–∞–Ω—Ç "–ó–ª–∞—Ç–Ω–∞ –≤–∏–ª–∏—Ü–∞"'),
            ('grand-sofia', '–•–æ—Ç–µ–ª "–ì—Ä–∞–Ω–¥ –°–æ—Ñ–∏—è"'),
            ('zdrave-medical', '–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏ —Ü–µ–Ω—Ç—ä—Ä "–ó–¥—Ä–∞–≤–µ+"'),
            ('moto-expert', '–ê–≤—Ç–æ—Å–µ—Ä–≤–∏–∑ "–ú–æ—Ç–æ –ï–∫—Å–ø–µ—Ä—Ç"')
        ]
        
        for url_path, bot_name in test_urls:
            print(f"\nü§ñ –¢–µ—Å—Ç–≤–∞–Ω–µ –Ω–∞ {bot_name}:")
            
            # –¢–µ—Å—Ç –Ω–∞ —É–µ–± –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
            stdin, stdout, stderr = ssh.exec_command(f"curl -s http://localhost/{url_path}/ | grep -i '{bot_name}'")
            content_response = stdout.read().decode('utf-8')
            
            if bot_name in content_response:
                print(f"   ‚úÖ –ü—Ä–∞–≤–∏–ª–Ω–æ –∑–∞–≥–ª–∞–≤–∏–µ: OK")
            else:
                print(f"   ‚ùå –ì—Ä–µ—à–Ω–æ –∑–∞–≥–ª–∞–≤–∏–µ")
            
            # –¢–µ—Å—Ç –Ω–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–æ—Ç–æ —Å—ä–æ–±—â–µ–Ω–∏–µ
            if 'DragonForgedDreams' in content_response:
                print(f"   ‚ùå DragonForged —Ç–µ–∫—Å—Ç: –í–°–ï –û–©–ï –°–™–©–ï–°–¢–í–£–í–ê!")
            else:
                print(f"   ‚úÖ DragonForged —Ç–µ–∫—Å—Ç: –ü—Ä–µ–º–∞—Ö–Ω–∞—Ç")
        
        print(f"\nüéâ –û–±–Ω–æ–≤—è–≤–∞–Ω–µ—Ç–æ –∑–∞–≤—ä—Ä—à–µ–Ω–æ!")
        print(f"\nüåê URL-–∏ –∑–∞ —Ç–µ—Å—Ç–≤–∞–Ω–µ:")
        for url_path, bot_name in test_urls:
            print(f"   {bot_name}: http://{host}/{url_path}/")
        
        ssh.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –ì—Ä–µ—à–∫–∞: {e}")
        return False

if __name__ == "__main__":
    update_nginx_static()
